Look at my cbt code for the frontend "import 'package:flutter/material.dart';
import 'package:studify/desktop/components/admin/screens/cbt_management/cbt_results.dart';
import 'package:studify/desktop/components/admin/screens/cbt_management/cbt_uploaded_q_a.dart';
import 'package:studify/desktop/components/admin/screens/cbt_management/create_cbt_q_a.dart';
import 'package:studify/mobile/widgets/customizable_card.dart';

class CBTAdminManagementScreen extends StatefulWidget {
  const CBTAdminManagementScreen({super.key});

  @override
  CBTAdminManagementScreenState createState() =>
      CBTAdminManagementScreenState();
}

class CBTAdminManagementScreenState extends State<CBTAdminManagementScreen> {
  // This variable holds the current view state
  String _currentView = 'default';

  void _createCBTQA() {
    setState(() {
      _currentView = 'createCBTQA';
    });
  }

  void _viewCBTResults() {
    setState(() {
      _currentView = 'CBTResults';
    });
  }

  void _viewCBTUploadedQA() {
    setState(() {
      _currentView = 'CBTUploadedQA';
    });
  }

  void _goBack() {
    setState(() {
      _currentView = 'default';
    });
  }

  @override
  Widget build(BuildContext context) {
    return Container(
      width: double.infinity,
      color: Colors.grey.shade100,
      padding: const EdgeInsets.all(40),
      child: _buildCurrentView(),
    );
  }

  // This function builds the current view based on the state
  Widget _buildCurrentView() {
    switch (_currentView) {
      case 'createCBTQA':
        return CreateCBTExamAdminScreen(onBack: _goBack);
      case 'CBTResults':
        return CBTResultsAdminScreen(onBack: _goBack);
      case 'CBTUploadedQA':
        return CBTUploadedQAAdminScreen(onBack: _goBack);
      default:
        return _buildDefaultView();
    }
  }

  // Default view with the CustomizableCards
  Widget _buildDefaultView() {
    return Column(
      children: [
        MouseRegion(
          cursor: SystemMouseCursors.click,
          child: CustomizableCard(
            passedFunction: _createCBTQA,
            leftIconPath: 'assets/images/hat_G.svg',
            isStyleTwo: false,
            isGradient: false,
            decoration: BoxDecoration(
                color: Colors.white, borderRadius: BorderRadius.circular(10)),
            borderRadius: BorderRadius.circular(10),
            padding: 10,
            leftIconSize: 30,
            padding3: 7,
            centerText1: 'Create CBT Q&A',
            centerTextStyle1: const TextStyle(
              fontSize: 12,
              fontWeight: FontWeight.w500,
            ),
            rightIcon1: Icons.arrow_forward_ios_outlined,
            rightIconSize: 14,
          ),
        ),
        const SizedBox(
          height: 20,
        ),
        MouseRegion(
          cursor: SystemMouseCursors.click,
          child: CustomizableCard(
            passedFunction: _viewCBTResults,
            leftIconPath: 'assets/images/hat_G.svg',
            isStyleTwo: false,
            isGradient: false,
            decoration: BoxDecoration(
                color: Colors.white, borderRadius: BorderRadius.circular(10)),
            borderRadius: BorderRadius.circular(10),
            padding: 10,
            leftIconSize: 30,
            padding3: 7,
            centerText1: 'View CBT Results',
            centerTextStyle1: const TextStyle(
              fontSize: 12,
              fontWeight: FontWeight.w500,
            ),
            rightIcon1: Icons.arrow_forward_ios_outlined,
            rightIconSize: 14,
          ),
        ),
        const SizedBox(
          height: 20,
        ),
        MouseRegion(
          cursor: SystemMouseCursors.click,
          child: CustomizableCard(
            passedFunction: _viewCBTUploadedQA,
            leftIconPath: 'assets/images/hat_G.svg',
            isStyleTwo: false,
            isGradient: false,
            decoration: BoxDecoration(
                color: Colors.white, borderRadius: BorderRadius.circular(10)),
            borderRadius: BorderRadius.circular(10),
            padding: 10,
            leftIconSize: 30,
            padding3: 7,
            centerText1: 'Review CBT Uploaded Q&A',
            centerTextStyle1: const TextStyle(
              fontSize: 12,
              fontWeight: FontWeight.w500,
            ),
            rightIcon1: Icons.arrow_forward_ios_outlined,
            rightIconSize: 14,
          ),
        ),
      ],
    );
  }
}
" another part "import 'package:flutter/material.dart';
import 'package:studify/desktop/components/admin/screens/cbt_management/create_cbt_stage_2.dart';
import 'package:studify/mobile/widgets/custom_text.dart';
import 'package:studify/mobile/widgets/custom_text_field.dart';
import 'package:studify/mobile/widgets/role_selection.dart';

class CreateCBTExamAdminScreen extends StatefulWidget {
  final VoidCallback onBack;

  const CreateCBTExamAdminScreen({super.key, required this.onBack});

  @override
  State<CreateCBTExamAdminScreen> createState() =>
      _CreateCBTExamAdminScreenState();
}

class _CreateCBTExamAdminScreenState extends State<CreateCBTExamAdminScreen> {
  String? selectedRole;
  final List<String> roles = ['Parent', 'Teacher', 'Admin'];

  //
  String _currentView = 'default';

  void _createCBTStageTwo() {
    setState(() {
      _currentView = 'createCBT';
    });
  }

  void _goBack() {
    setState(() {
      _currentView = 'default';
    });
  }

  @override
  Widget build(BuildContext context) {
    return _buildCurrentView();
  }

  Widget _buildCurrentView() {
    switch (_currentView) {
      case 'createCBT':
        return CreateCBTStageTwoAdminScreen(
          onBack: _goBack,
        );
      default:
        return _buildDefaultView();
    }
  }

  Widget _buildDefaultView() {
    return Column(
      children: [
        Container(
          padding: const EdgeInsets.all(8),
          decoration: BoxDecoration(
            color: Colors.white,
            borderRadius: BorderRadius.circular(20),
          ),
          width: double.infinity,
          child: Row(
            children: [
              IconButton(
                icon: const Icon(
                  Icons.arrow_back_ios,
                  size: 10,
                ),
                onPressed: widget.onBack,
              ),
              const SizedBox(
                width: 20,
              ),
              const CustomText(
                'Create CBT Q&A',
                fontSize: 14,
                fontWeight: FontWeight.w500,
              ),
            ],
          ),
        ),
        const SizedBox(
          height: 20,
        ),
        Row(
          children: [
            Flexible(
              child: CustomDropdown(
                value: selectedRole,
                isBlackFontColor: true,
                decoration: BoxDecoration(
                  color: Colors.white,
                  border: Border.all(
                    color: Colors.white,
                    width: 0.7,
                  ),
                  borderRadius: BorderRadius.circular(10),
                ),
                items: roles,
                hint: 'Select Test Type',
                onChanged: (value) {
                  setState(() {
                    selectedRole = value;
                  });
                },
              ),
            ),
            const SizedBox(
              width: 10,
            ),
            Flexible(
              child: CustomDropdown(
                value: selectedRole,
                isBlackFontColor: true,
                decoration: BoxDecoration(
                  color: Colors.white,
                  border: Border.all(
                    color: Colors.white,
                    width: 0.7,
                  ),
                  borderRadius: BorderRadius.circular(10),
                ),
                items: roles,
                hint: 'Select Class',
                onChanged: (value) {
                  setState(() {
                    selectedRole = value;
                  });
                },
              ),
            ),
            const SizedBox(
              width: 10,
            ),
            Flexible(
              child: CustomDropdown(
                value: selectedRole,
                isBlackFontColor: true,
                decoration: BoxDecoration(
                  color: Colors.white,
                  border: Border.all(
                    color: Colors.white,
                    width: 0.7,
                  ),
                  borderRadius: BorderRadius.circular(10),
                ),
                items: roles,
                hint: 'Select Subject',
                onChanged: (value) {
                  setState(() {
                    selectedRole = value;
                  });
                },
              ),
            ),
          ],
        ),
        const SizedBox(
          height: 15,
        ),
        Row(
          children: [
            Flexible(
              child: CustomDropdown(
                value: selectedRole,
                isBlackFontColor: true,
                decoration: BoxDecoration(
                  color: Colors.white,
                  border: Border.all(
                    color: Colors.white,
                    width: 0.7,
                  ),
                  borderRadius: BorderRadius.circular(10),
                ),
                items: roles,
                hint: 'Select Test Type',
                onChanged: (value) {
                  setState(() {
                    selectedRole = value;
                  });
                },
              ),
            ),
            const SizedBox(
              width: 10,
            ),
            Flexible(
              child: CustomDropdown(
                value: selectedRole,
                isBlackFontColor: true,
                decoration: BoxDecoration(
                  color: Colors.white,
                  border: Border.all(
                    color: Colors.white,
                    width: 0.7,
                  ),
                  borderRadius: BorderRadius.circular(10),
                ),
                items: roles,
                hint: 'Select Class',
                onChanged: (value) {
                  setState(() {
                    selectedRole = value;
                  });
                },
              ),
            ),
            const SizedBox(
              width: 10,
            ),
            Flexible(
              child: CustomDropdown(
                value: selectedRole,
                isBlackFontColor: true,
                decoration: BoxDecoration(
                  color: Colors.white,
                  border: Border.all(
                    color: Colors.white,
                    width: 0.7,
                  ),
                  borderRadius: BorderRadius.circular(10),
                ),
                items: roles,
                hint: 'Select Subject',
                onChanged: (value) {
                  setState(() {
                    selectedRole = value;
                  });
                },
              ),
            ),
          ],
        ),
        const SizedBox(
          height: 15,
        ),
        CustomTextField(
          hintText: 'Write CBT Primary Instructions...',
          maxlines: 5,
          decoration: BoxDecoration(
            color: Colors.white,
            border: Border.all(
              color: Colors.white,
              width: 0.7,
            ),
            borderRadius: BorderRadius.circular(5),
          ),
          hintTextStyle: const TextStyle(
            color: Colors.black,
            fontSize: 13,
          ),
          textStyle: const TextStyle(
            color: Colors.black,
            fontSize: 13,
          ),
        ),
        const SizedBox(
          height: 20,
        ),
        InkWell(
          onTap: _createCBTStageTwo,
          child: Container(
            width: 200,
            decoration: BoxDecoration(
              color: Colors.black,
              borderRadius: BorderRadius.circular(10),
            ),
            padding: const EdgeInsets.all(10),
            child: const Center(
              child: CustomText(
                'Proceed',
                color: Colors.white,
                fontSize: 12,
                fontWeight: FontWeight.w300,
              ),
            ),
          ),
        ),
      ],
    );
  }
}
" and "import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter/widgets.dart';
import 'package:studify/mobile/widgets/custom_text.dart';
import 'package:studify/mobile/widgets/custom_text_field.dart';
import 'package:studify/mobile/widgets/customizable_card.dart';
import 'package:studify/mobile/widgets/role_selection.dart';

class CreateCBTStageTwoAdminScreen extends StatefulWidget {
  final VoidCallback onBack;

  const CreateCBTStageTwoAdminScreen({super.key, required this.onBack});

  @override
  State<CreateCBTStageTwoAdminScreen> createState() =>
      _CreateCBTStageTwoAdminScreenState();
}

class _CreateCBTStageTwoAdminScreenState
    extends State<CreateCBTStageTwoAdminScreen> {
  String? selectedNoOfAnswers;

  final List<String> noOfAnswers = ['2', '3', '4', '5'];

  @override
  Widget build(BuildContext context) {
    return SingleChildScrollView(
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Container(
            padding: const EdgeInsets.all(8),
            decoration: BoxDecoration(
              color: Colors.white,
              borderRadius: BorderRadius.circular(20),
            ),
            width: double.infinity,
            child: Row(
              children: [
                IconButton(
                  icon: const Icon(
                    Icons.arrow_back_ios,
                    size: 10,
                  ),
                  onPressed: widget.onBack,
                ),
                const SizedBox(
                  width: 20,
                ),
                const CustomText(
                  'Create CBT Q&A 1 of 50',
                  fontSize: 14,
                  fontWeight: FontWeight.w500,
                ),
              ],
            ),
          ),
          const SizedBox(
            height: 20,
          ),
          Row(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Flexible(
                child: Column(
                  children: [
                    CustomizableCard(
                      leftText: 'Question',
                      isTextLeft: true,
                      leftTextStyle: const TextStyle(
                        fontSize: 12,
                      ),
                      padding: 11,
                      decoration: BoxDecoration(
                        color: Colors.white,
                        borderRadius: BorderRadius.circular(10),
                      ),
                    ),
                    const SizedBox(
                      height: 10,
                    ),
                    CustomTextField(
                      hintText: 'Type Question 1...',
                      maxlines: 6,
                      decoration: BoxDecoration(
                        color: Colors.white,
                        border: Border.all(
                          color: Colors.white,
                          width: 0.7,
                        ),
                        borderRadius: BorderRadius.circular(5),
                      ),
                      hintTextStyle: const TextStyle(
                        color: Colors.black,
                        fontSize: 13,
                      ),
                      textStyle: const TextStyle(
                        color: Colors.black,
                        fontSize: 13,
                      ),
                    ),
                  ],
                ),
              ),
              const SizedBox(
                width: 20,
              ),
              Flexible(
                child: Column(
                  children: [
                    CustomDropdown(
                      value: selectedNoOfAnswers,
                      isBlackFontColor: true,
                      decoration: BoxDecoration(
                        color: Colors.white,
                        border: Border.all(
                          color: Colors.white,
                          width: 0.7,
                        ),
                        borderRadius: BorderRadius.circular(10),
                      ),
                      items: noOfAnswers,
                      hint: 'Number of Answers',
                      onChanged: (value) {
                        setState(() {
                          selectedNoOfAnswers = value;
                        });
                      },
                    ),
                    const SizedBox(
                      height: 10,
                    ),
                    const Column(
                      children: [],
                    )
                  ],
                ),
              ),
            ],
          ),
          const SizedBox(
            height: 15,
          ),
          CustomTextField(
            hintText: 'Type CBT Section Instructions...',
            maxlines: 4,
            decoration: BoxDecoration(
              color: Colors.white,
              border: Border.all(
                color: Colors.white,
                width: 0.7,
              ),
              borderRadius: BorderRadius.circular(5),
            ),
            hintTextStyle: const TextStyle(
              color: Colors.black,
              fontSize: 13,
            ),
            textStyle: const TextStyle(
              color: Colors.black,
              fontSize: 13,
            ),
          ),
          const SizedBox(
            height: 15,
          ),
          SizedBox(
            width: 400,
            child: Row(
              children: [
                Flexible(
                  child: CustomTextField(
                    hintText: 'Occurence From',
                    decoration: BoxDecoration(
                      color: Colors.white,
                      border: Border.all(
                        color: Colors.white,
                        width: 0.7,
                      ),
                      borderRadius: BorderRadius.circular(5),
                    ),
                    hintTextStyle: const TextStyle(
                      color: Colors.black,
                      fontSize: 13,
                    ),
                    textStyle: const TextStyle(
                      color: Colors.black,
                      fontSize: 13,
                    ),
                  ),
                ),
                const SizedBox(
                  width: 20,
                ),
                Flexible(
                  child: CustomTextField(
                    hintText: 'Occurence to',
                    decoration: BoxDecoration(
                      color: Colors.white,
                      border: Border.all(
                        color: Colors.white,
                        width: 0.7,
                      ),
                      borderRadius: BorderRadius.circular(5),
                    ),
                    hintTextStyle: const TextStyle(
                      color: Colors.black,
                      fontSize: 13,
                    ),
                    textStyle: const TextStyle(
                      color: Colors.black,
                      fontSize: 13,
                    ),
                  ),
                ),
              ],
            ),
          ),
          const SizedBox(
            height: 25,
          ),
          Center(
            child: SizedBox(
              width: 410,
              child: Row(
                children: [
                  InkWell(
                    onTap: () {},
                    child: Container(
                      width: 200,
                      decoration: BoxDecoration(
                        color: Colors.white,
                        border: Border.all(
                          width: 0.7,
                          color: Colors.black,
                        ),
                        borderRadius: BorderRadius.circular(10),
                      ),
                      padding: const EdgeInsets.all(10),
                      child: const Center(
                        child: CustomText(
                          'Previous Question',
                          color: Colors.black,
                          fontSize: 12,
                          fontWeight: FontWeight.w300,
                        ),
                      ),
                    ),
                  ),
                  Flexible(
                    flex: 1,
                    child: Container(),
                  ),
                  InkWell(
                    onTap: () {},
                    child: Container(
                      width: 200,
                      decoration: BoxDecoration(
                        color: Colors.black,
                        borderRadius: BorderRadius.circular(10),
                      ),
                      padding: const EdgeInsets.all(10),
                      child: const Center(
                        child: CustomText(
                          'Next Question',
                          color: Colors.white,
                          fontSize: 12,
                          fontWeight: FontWeight.w300,
                        ),
                      ),
                    ),
                  ),
                ],
              ),
            ),
          )
        ],
      ),
    );
  }
}
" lets work on this now, if you notice in the stage two of creating the cbt questions, I have a selector that says "Number of Anwsers", and two text field that says occurence from and occurence to ... that is for the cbt secondary questions, it should show up from say the admin types or selects occur from current question to question 10, that instruction should only show from question 1 to 10,  I know I used a couple of repeated lists before the stage two, one of those dropdowns is mean't to be a number of questions selector, which would render the stage two UI conditionally to what has been selected let say we have "20", "40", "60", "80", and "100" the stage two would have a question counter UI, that would show the number of questions entered and number of questions not entered and at the top where I have the go back function that "CBT Q&A 1 of 50 should not be static but work with the counter, and the previous and next should change the numbers correctly, now back to the number of answers, once selected between 2,3,4,5, a number of textfields should be rendered too with a similar dropdown to select the correct answer you get what I mean?